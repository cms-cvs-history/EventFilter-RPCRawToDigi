process D2R = {

  source = PoolSource {
    untracked vstring fileNames = {'file:digis.root'}
    untracked int32 maxEvents = -1
    untracked uint32 debugVebosity = 0
    untracked bool   debugFlag     = false
  }

  # cabling
  include "CondCore/DBCommon/data/CondDBCommon.cfi"
  replace CondDBCommon.connect = "sqlite_file:cabling-MTCC-2-2tb-v2.db"
  replace CondDBCommon.catalog = "file:cablingCatalog.xml"
  replace CondDBCommon.timetype = "runnumber"
  replace CondDBCommon.DBParameters.messageLevel = 1
  replace CondDBCommon.DBParameters.authenticationPath="."
  es_source = PoolDBESSource {
    using CondDBCommon
    VPSet toGet={{string record="RPCReadOutMappingRcd" string tag="RPCReadOutMapping_v1"}}
  }

  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
  include "Geometry/RPCGeometry/data/rpcGeometry.cfi"

  service = MessageLogger { 
    untracked vstring destinations = {"d2r.log"} 
    untracked PSet d2r.log = { untracked string threshold = "DEBUG"}
    untracked vstring debugModules = { "rpcDigiToRaw"}
  }


  module out = PoolOutputModule {
      untracked string fileName = 'rawdata.root'
      untracked vstring outputCommands = { "keep *", "drop *_rpcunpacker_*_*" }
  }

  module rpcDigiToRaw = RPCPackingModule {
  }

  path p = { rpcDigiToRaw }
  endpath e = {  out }




}
