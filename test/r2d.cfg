process R2D = {
  source = PoolSource { untracked vstring fileNames = {'file:raw.root' } }

  # cabling
  include "CondCore/DBCommon/data/CondDBCommon.cfi"
  replace CondDBCommon.connect = "sqlite_file:cabling-MTCC-2-2tb-v2.db"
  replace CondDBCommon.catalog = "file:cablingCatalog.xml"
  replace CondDBCommon.timetype = "runnumber"
  replace CondDBCommon.DBParameters.messageLevel = 1
  replace CondDBCommon.DBParameters.authenticationPath="."
  es_source = PoolDBESSource {
    using CondDBCommon
    VPSet toGet={{string record="RPCReadOutMappingRcd" string tag="RPCReadOutMapping_v1"}}
  }

  module rpcunpacker = RPCUnpackingModule{
    untracked bool PrintOut = true  
    untracked bool runDQM = false
    untracked bool DQMSaveRootFile = false 
    untracked int32 EventsIntervalForRootFile = 5
    untracked string RootFileName ="RPCMonitorModule.root"
  }
	

  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
  include "Geometry/RPCGeometry/data/rpcGeometry.cfi"

  service = MessageLogger {
      untracked vstring destinations = {"r2d.log"}
      untracked PSet r2d.log = { untracked string threshold = "DEBUG"}
      untracked vstring debugModules = { "rpcunpacker"}
#     untracked vstring destinations = {"cout"} 
  }

  module out = PoolOutputModule {
      untracked string fileName ="digis.root"
      untracked vstring outputCommands = { "keep *", "drop *_source_*_*" }
  }
	
  path p = {rpcunpacker} 
  endpath e = {out }
}
