process R2D = {
  source = PoolSource { untracked vstring fileNames = {'file:rawdata.root' } }

  # cabling
  include "CondCore/DBCommon/data/CondDBCommon.cfi"
  replace CondDBCommon.connect = "sqlite_fip:CondCore/SQLiteData/data/RPCCabling_030707.db"
  replace CondDBCommon.timetype = "runnumber"
  replace CondDBCommon.DBParameters.messageLevel = 1
  es_source = PoolDBESSource {
    using CondDBCommon
    VPSet toGet={{string record="RPCReadOutMappingRcd" string tag="RPCReadOutMapping_v1"}}
  }


  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
  include "Geometry/RPCGeometry/data/rpcGeometry.cfi"

  service = MessageLogger {
      untracked vstring destinations = {"r2d.log"}
      untracked PSet r2d.log = { untracked string threshold = "DEBUG"}
      untracked vstring debugModules = { "rpcunpacker"}
#     untracked vstring destinations = {"cout"} 
  }

  module out = PoolOutputModule {
      untracked string fileName ="digis2.root"
      untracked vstring outputCommands = { "drop *", "keep *_rpcunpacker_*_*" }
  }

  module rpcunpacker = RPCUnpackingModule{
    untracked InputTag InputLabel = rpcDigiToRaw 
  }
	
	
  path p = {rpcunpacker} 
  endpath e = {out }
}
